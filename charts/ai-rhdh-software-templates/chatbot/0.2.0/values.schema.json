{
    "$schema": "http://json-schema.org/schema#",
    "type": "object",
    "properties": {
        "application": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name assigned to all of the frontend objects defined in this template."
                },
                "namespace": {
                    "type": ["string", "null"],
                    "description": "The namespace that the application will be deployed, if blank the current namespace will be used."
                },
                "appPort": {
                    "type": "integer",
                    "description": "The exposed port of the chatbot application, if left blank a value will be defaulted to 8501."
                },
                "appContainer": {
                    "type": "string",
                    "description": "The image used for the chatbot application interface, if left blank a value will be defaulted to 'quay.io/redhat-ai-dev/chatbot:latest'."
                }
            }
        },
        "model": {
            "type": "object",
            "properties": {
                "modelServicePort": {
                    "type": "integer",
                    "description": "The exposed port of the model server, if left blank a value will be defaulted to 8001."
                },       
                "modelServiceType": {
                    "type": "string",
                    "description": "The model service type used for the deployment, defaults to llama.cpp",
                    "enum": [ "llama.cpp", "vllm"]
                },
                "modelServiceContainer": {
                    "type": "string",
                    "description": "The image used for the model server, if left blank a value will be defaulted to 'quay.io/ai-lab/llamacpp_python:latest'."
                },
                "initContainer": {
                    "type": "string",
                    "description": "The image used for the initContainer of the chatbot app deployment, if left blank a value will be defaulted to 'quay.io/redhat-ai-dev/granite-7b-lab:latest'."
                },
                "modelInitCommand": {
                    "type": "string",
                    "description": "The command of the model server initContainer, if left blank a value will be defaulted to ['/usr/bin/install', '/model/model.file', '/shared/']. Is used only for the llama.cpp model service case."
                },
                "modelPath": {
                    "type": "string",
                    "description": "The path of the model file inside the model server container, if left blank a value will be defaulted to '/model/model.file'."
                },
                "modelName": {
                    "type": "string",
                    "description": "The name of the model inside the given vllm service. Only used for vllm model service type."
                },
                "modelMaxLength": {
                    "type": "integer",
                    "description": "The maximum length of tokens used for the vllm service. Only used for vllm model service type."
                },
                "vllmServiceContainer": {
                    "type": "string",
                    "description": "The image used for the vllm model service, if left blank a value will be defaulted to 'quay.io/rh-aiservices-bu/vllm-openai-ubi9:0.4.2'."
                }
            }
        },
        "gitops": {
            "type": "object",
            "properties": {
                "gitSecretName": {
                    "type": "string",
                    "description": "The name of the secret for the github token."
                },
                "gitSecretTokenName": {
                    "type": "string",
                    "description": "The name of the key for the github token."
                },
                "githubOrgName": {
                    "type": "string",
                    "description": "The github organization that the repos will be created."
                },
                "gitSourceRepo": {
                    "type": "string",
                    "description": "The github repo we will take the content from."
                },
                "gitDefaultBranch": {
                    "type": "string",
                    "description": "he created github repos default branch names."
                }
            }
        }
    }
}

